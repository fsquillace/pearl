#!/bin/sh
# pearl by Filippo Squillace
# (great update 16-12-2009 date of my last exam in UNICAL :)
# (update 21-07-2010 one of my last days in Valencia ยง:(  )
# (update 07-01-2012 ending the thesis in Valencia)
# (update 29-01-2012 continue ending thesis in Valencia)
# (update 27-01-2013 working in Dublin)
# (update 06-02-2013 still in Dublin and big day changing the name in pearl!)
# Usage: source pearl OR bash --rcfile pearl

# If not running interactively, don't do anything
[ -z "$PS1" ] && return
[[ $- != *i* ]] && return


if [ "${BASH_ARGV}" = "" ]; then
    echo "Error the correct usage is: source $0 OR bash --rcfile $0"
    exit 128
fi


# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"


# Possible choices:
#umask   file mode   directory mode
#0022    -rw-r--r--  drwxr-xr-x
#0077    -rw-------  drwx------
umask 0022


# Define the main pearl variables
export PEARL_ROOT=$(dirname $(readlink -f "${BASH_ARGV[0]}"))
if [ ! -d $PEARL_ROOT ]; then
    echo "Error: Could not set PEARL_ROOT env because $PEARL_ROOT does not exist."
    return 1
fi
export PEARL_HOME=~/.config/pearl
export PEARL_TEMPORARY=$PEARL_HOME/tmp/`tty`
mkdir -p $PEARL_TEMPORARY
# Variable for logging system
export PEARL_DEBUG=0

# Import the functions from misc.sh and install.sh
source $PEARL_ROOT/lib/misc.sh
source $PEARL_ROOT/lib/install.sh
source $PEARL_ROOT/lib/apps.sh

# Install pearl if it is not installed yet
pearl_install

#####################
# Variables
#####################

export SYNC_HOME=~/Dropbox/
export PYTHONPATH=$PYTHONPATH:$PEARL_ROOT/lib
PATH=${PEARL_ROOT}/bin:${PATH}
export EDITOR=vim
export VISUAL=$EDITOR # some programs use this instead of EDITOR
export MANPATH=$MANPATH:$PEARL_ROOT/man

# HIST variables
export HISTFILESIZE=100000
export HISTSIZE=100000
export HISTIGNORE="&:l[las]:[bf]g:l:a:j:f:b:e"
export HISTCONTROL=erasedups:ignorespace

#######################

#@@@@@@@@@@@@@@@@@@
#@@ Aliases
#@@@@@@@@@@@@@@@@@@

# Mini-aliases :)
alias j="jobs"
alias f="fg"
alias b="bg"
alias q="exit"
alias ls="/bin/ls --color=auto"

# Only the newer version of ls support the option --group-directories-first
ls --group-directories-first &> /dev/null
if [ "$?" -eq 0 ]; then
    alias l="ls --group-directories-first --color=auto -h"
else
    alias l="ls --color=auto -h"
fi

alias a="ls -ha"
alias c="clear"
alias e='$EDITOR'
alias p='pwd'
alias h='history'
alias t='tree'

alias ll="l -l"
alias la="a -l"

alias share="cd ${PEARL_ROOT}/share"
alias home="cd ${HOME}"
alias ~="cd ${HOME}"
alias etc="cd ${PEARL_ROOT}/etc"
alias bin="cd ${PEARL_ROOT}/bin"

# Allows to keep aliases in sudo
alias sudo="sudo "
#alias sudo="sudo -E"    # Useful to keep variables environment when you are root

alias go="ping 8.8.8.8"
alias goo="ping www.google.it"
alias isconnect="python -c \"import util.net;print(util.net.is_connect())\""

# Grep-based aliases
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
# Looks up to the history
alias hgrep='history | /usr/bin/grep -i'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Open screen+irssi
alias scrssi="screen -S scrssi -aARd -c ${PEARL_ROOT}/etc/screenrc -t irssi irssi; clear"

# If the system has htop use it!
[ -e /usr/bin/htop ] && alias top="/usr/bin/htop"

# Call PDB when an exception is raised
alias pypdb="$(which python) -m util.pdb_on_error"

# Enhanced ssh for X11 forwarding and 256 colors
alias sshx="TERM=xterm-256color LANG=en_US.UTF-8 ssh -Y"

# Enhanced mosh for 256 colors
alias moshx="LANG=en_US.UTF-8 mosh"

#@@@@@@@@@@@@@@@@@@@

#>>>>>>>>>>>>>>>>>>>
#>> Prompt
#>>>>>>>>>>>>>>>>>>>
source $PEARL_ROOT/etc/context/def

#>>>>>>>>>>>>>>>>>>>>>


#*******************
#** Bash options
#*******************
shopt -s cdspell &> /dev/null
shopt -s autocd  &> /dev/null
shopt -s dirspell &> /dev/null
# append to the history file, don't overwrite it
shopt -s histappend &> /dev/null
# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize &> /dev/null

#*********************

#########################
# MISC
#########################

#*** Handle to clean temp directory
trap "/bin/rm -fr $PEARL_TEMPORARY" QUIT EXIT ABRT KILL TERM


#******* Script to trap USR1 signal in order to handle changing directory
function sigusr2()
{ 
  source $PEARL_TEMPORARY/new_cmd

}

trap "sigusr2" USR2       # catch -USR2 signal

# Load the LS_COLORS configuration
[ -f $PEARL_ROOT/etc/LS_COLORS ] && eval $(dircolors -b $PEARL_ROOT/etc/LS_COLORS)

# This binds Ctrl-O to ranger:
bind '"\C-o":"\C-u\C-k ranger\C-m"'


# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -f ~/.bash_aliases ]; then
        . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
        . /etc/bash_completion
fi


if [ -n "$TMUX" ]; then
    # set TERM according to the parent terminal's TERM (see etc/tmux.conf)
    case "$TERM" in
        *-256color) export TERM=screen-256color ;;
        *) export TERM=screen ;;
    esac
fi

# Set the terminfo for screen 256
export TERMINFO_DIRS=$TERMINFO_DIRS:$PEARL_ROOT/share/terminfo
