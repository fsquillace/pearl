#!/usr/bin/python
#
# Author: Filippo Squillace <sqoox85@gmail.com>
#
# Copyright 2010
#
# This program is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 3, as published
# by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranties of
# MERCHANTABILITY, SATISFACTORY QUALITY, or FITNESS FOR A PARTICULAR
# PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.

'''This script allows to put a list of favourite directory in a file.
So, you can quickly change a directory just typing the related entry. ;)
All the entries are stored in ~/.config/ranger/bookmarks in this way it's
possible to integrate this command with ranger file system.
'''
__author__ = 'Filippo Squillace'
__date__ = '12/09/2010'
__license__   = 'GPL v3'
__copyright__ = '2010'
__docformat__ = 'restructuredtext en'
__version__ = "1.0.8"

import re
import string
import os
import os.path
import sys

def help():
    print(("Usage: "+sys.argv[0]+" [OPT] [num]"))
    print("Description:")
    print("Show, add, remove directory entry in a list and execute a change of directory")
    print("Options:")
    print("-h --help\t\tDisplay this")
    print("-r --remove num\t\tRemove a entry")
    print("-a --add path\t\tAdd the specified path")
    print("-p --print num\t\tJust print the path directory (Useful when you're using \"``\" notation).")

if __name__ == "__main__":
    path = os.environ["HOME"]+'/.config/ranger/bookmarks'

    # Ensure that the file already exists
    if not os.path.exists(path):
        os.system('touch ' + path)

    if len(sys.argv)==2 and (sys.argv[1]=="-h" or sys.argv[1]=="--help"):
        help()
    elif len(sys.argv)==3 and (sys.argv[1]=="-a" or sys.argv[1]=="--add"):

        abs_path = os.path.abspath(sys.argv[2])
        
        alphanums = [l for l in string.ascii_letters+string.digits+string.punctuation]
        for line in open(path):
            m = re.match('(.):(.*)', line)
            if m:
                alphanums.remove(m.groups()[0])
        
        
        f = open(path, 'a')
        f.write('\n'+alphanums[0]+':'+abs_path)
        f.close()
        
        
    elif len(sys.argv)==3 and (sys.argv[1]=="-r" or sys.argv[1]=="--remove"):
        tmp = []
        for line in open(path):
            m = re.match('('+sys.argv[2]+'):(.*)', line)
            if not m:
                tmp.append(line)
        f = open(path, 'w')
        f.writelines(tmp)
        
        
    elif len(sys.argv)==3 and (sys.argv[1]=="-p" or sys.argv[1]=="--print"):
        for line in open(path):
            m = re.match('('+sys.argv[2]+'):(.*)', line)
            if m:
                print(m.groups()[1])
                break

    elif len(sys.argv)==1:
        
        for line in open(path):
            m = re.match('(.):(.*)', line)
            if m:
                print(m.groups()[0]+') '+m.groups()[1])
    else:
        help()
            

