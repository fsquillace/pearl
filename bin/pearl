#!/usr/bin/env bash
#
# This file is part of Pearl (https://github.com/fsquillace/pearl).
#
# Copyright (c) 2008-2016
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU Library General Public License as published
# by the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# The variable PEARL_ROOT identify whether the pearl script has been invoked
# from a Pearl environment. Before overriding PEARL_ROOT, another variable
# ENABLE_SIGNAL identify whether the USR1 signal can be sent or not.
ENABLE_SIGNAL=false
[ -z "$PEARL_ROOT" ] || ENABLE_SIGNAL=true

set -e

NAME='Pearl'
CMD='pearl'
DESCRIPTION='The package manager for Linux shells'
AUTHOR='Filippo Squillace <feel dot sqoox at gmail.com>'
HOMEPAGE='https://github.com/fsquillace/pearl'
COPYRIGHT='2008-2016'
PEARL_ROOT="$(readlink -f $(dirname $(readlink -f "$0"))/..)"
PEARL_HOME="${HOME}/.config/pearl"

source "${PEARL_ROOT}/lib/utils.sh"
source "${PEARL_ROOT}/lib/core/module.sh"
source "${PEARL_ROOT}/lib/core/system.sh"

KILL_CMD=kill

###################################
### General functions           ###
###################################

usage() {
    echo -e "$NAME: $DESCRIPTION"
    echo -e "Usage: $CMD [options] [command] [args]"
	echo
    echo -e "Commands:"
    echo -e "  list                     List all the available $NAME modules"
    echo -e "  search    <pattern>      Search the available $NAME modules that match pattern"
    echo -e "  install   [module1...]   Install $NAME or the modules if specified"
    echo -e "  update    [module1...]   Update $NAME or the modules if specified"
    echo -e "  remove    [module1...]   Remove $NAME or the modules if specified"
	echo
    echo -e "Options:"
    echo -e "  -h, --help               Show this help message"
}

check_cli(){
    if $OPT_HELP
    then
        if $COMMAND_SEARCH || $COMMAND_LIST || \
			$COMMAND_INSTALL || \
			$COMMAND_UPDATE || $COMMAND_REMOVE
        then
            die "The help option must be used exclusively"
        fi
    fi
    if [ "$ARGS" != "" ]
    then
        die "No arguments are needed. For the CLI syntax run: $CMD --help"
    fi

    return 0
}


function parse_arguments(){
    COMMAND_LIST=false
    COMMAND_SEARCH=false
    COMMAND_INSTALL=false
    COMMAND_UPDATE=false
    COMMAND_REMOVE=false
	COMMAND_ARGS=()
	OPT_HELP=false

	for opt in "$@"
	do
		case "$1" in
			list)
				COMMAND_LIST=true; shift ;;
			search)
				COMMAND_SEARCH=true; shift ; COMMAND_ARGS=("$@") ; shift ${#} ;;
			install)
				COMMAND_INSTALL=true; shift ; COMMAND_ARGS=("$@") ; shift ${#} ;;
			update)
				COMMAND_UPDATE=true; shift ; COMMAND_ARGS=("$@") ; shift ${#} ;;
			remove)
				COMMAND_REMOVE=true; shift ; COMMAND_ARGS=("$@") ; shift ${#} ;;

			-h|--help) OPT_HELP=true ; shift ;;

			--) shift ; break ;;
			-*) die "Invalid option $1" ;;
			*) break ;;
		esac
	done

	ARGS=()
	for arg in "$@"
	do
		ARGS+=("$arg")
	done
}

function execute_operation(){
	$OPT_HELP && usage && return

	$COMMAND_LIST && pearl_module_list && return
	$COMMAND_SEARCH && pearl_module_list ${COMMAND_ARGS[@]} && return

	if $COMMAND_INSTALL; then
		[ -z "$COMMAND_ARGS" ] && pearl_install ${PEARL_ROOT}

		for module in ${COMMAND_ARGS[@]}
		do
		    pearl_module_install "$module"
		done
	elif $COMMAND_UPDATE; then
		[ -z "$COMMAND_ARGS" ] && pearl_update

		for module in ${COMMAND_ARGS[@]}
		do
		    pearl_module_update "$module"
		done
	elif $COMMAND_REMOVE; then
		[ -z "$COMMAND_ARGS" ] && pearl_remove

		for module in ${COMMAND_ARGS[@]}
		do
		    pearl_module_remove "$module"
		done
	fi

	source_pearl
	return 0
}

function source_pearl(){
	# Send signal to parent in order to (re)source pearl
    $ENABLE_SIGNAL && $KILL_CMD -USR1 $PPID
	return 0
}

parse_arguments "$@"
check_cli
execute_operation
# vim: set ts=4 sw=4 noet:
